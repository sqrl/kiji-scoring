
                              Kiji Scoring Release Notes
Version 0.5.0
    * SCORE-78. Prepares KijiScoring for BentoBox. Many unnecessary dependencies have been
        removed. Missing newlines have been added in the FreshTool. README.md updated.
    * SCORE-77, SCORE-74. KijiScoring now properly releases all Kiji resources.
        FreshKijiTableReaders and KijiFreshnessManagers must be closed to release resources.
    * SCORE-76. FreshTool's --help option no longer requires a meaningless --do flag.

Version 0.4.0
  * SCORE-61. Resolve race conditions in InternalFreshKijiTableReader
  * SCORE-69. Local FreshKijiTableReader now creates only one table connection for all write
      operations.
  * SCORE-54. Writing using the ProducerContext in setup and cleanup will now produce an
      UnsupportedOperationException.  If you wish to write during these methods, use a
      KijiTableWriter instead.
  * SCORE-32. NewerThan now exposes a getter getNewerThanTimeInMillis() to retrieve the configured
      time before which data is considered stale.
  * SCORE-52. FreshTool now accepts File paths for policy state using the --policy-state-file flag.
  * SCORE-27. PolicyContext now supports a getStore(String) operation so that FreshnessPolicys can
      access KeyValue stores in calls to isFresh().

Version 0.3.0
  * SCORE-44. Producer output from freshened get() requests are now committed atomically based on
      the 'allow partial freshness' rule specified during table creation.  If partial freshness is
      allowed each producer will commit all of its writes atomically after produce() returns.  If
      partial freshness is not allowed, all writes will be cached until all producers associated
      with the same request have finished.  Partial freshness requires a separate table connection
      for each producer and does not guarantee that the output of one producer will not be used as
      input to another.  Given the high cost of table connections, partial freshening is not
      recommended and is disabled by default.

Version 0.2.0
  * SCORE-46. Freshness policies attached to qualified columns in map type families will now be
      triggered by requests to the entire map type family.
  * SCORE-49. Fixes ConcurrentModificationException in FreshKijiTableReader.rereadPolicies().
  * SCORE-48. Updates pom.xml versions to latest released versions of dependencies.
  * SCORE-47. KijiFreshnessManager and FreshTool now support post-attachment validation of
      freshness policies.
  * SCORE-45. FreshKijiTableReaderBuilder.get() is now FreshKijiTableReaderBuilder.create().
  * SCORE-34. FreshKijiTableReader.reloadPolicies has been renamed rereadPolicies to reflect the
      distinction from preload.
  * SCORE-22. KijiFreshnessManager store policy methods now include a variety of safety checks.
  * SCORE-41. FreshKijiTableReader now includes a preload method, which instantiates all objects
      necessary for freshening a given data request without side effects.
  * SCORE-39. FreshKijiTableReader now includes methods which override configured timeout durations.
  * SCORE-13. FreshKijiTableReaderFactory has been replaced with FreshKijiTableReaderBuilder.
  * SCORE-36. Makes the fresh CLI tool visible to the kiji tool launcher.

Version 0.1.0

